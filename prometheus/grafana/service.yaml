apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-internal
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
  clusterIP: None

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  serviceName: grafana-internal
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/version: v7.1
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/part-of: prometheus
        app.kubernetes.io/managed-by: launchcpx
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '3000'
        prometheus.io/path: '/metrics'
    spec:
      serviceAccountName: grafana
      containers:
        - name: grafana
          image: grafana/grafana:7.1.4
          command: ['/run.sh']
          ports:
            - name: grafana
              containerPort: 3000
          volumeMounts:
            - name: config
              mountPath: /etc/grafana/grafana.ini
              subPath: grafana.ini
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: data
              mountPath: /var/lib/grafana
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            periodSeconds: 15
            timeoutSeconds: 30
            failureThreshold: 8
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: datasources
          configMap:
            name: datasources
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - port: 3000
