#!/bin/sh

set -e

if [ -z $FLIGHTCTL_ROOT ]; then
  echo "Run flightctl"
  exit 1
fi

. "${FLIGHTCTL_ROOT}/_flightctl_lib.sh"

usage() {
  cat <<EOF 1>&2
USAGE:
    $BIN_NAME [OPTIONS] <name>

OPTIONS:
    -n <namespace>
        Use the kubernetes namespace.
    -l <length>
        Change the generated password length in terms of bytes of randomness.
        Default is 32.
    -o <directory>
        Output config to directory.
        Default is the current directory.
    -h
        Print this help.

ARGS:
    <name>
        The name prefixes all resources of the redis deployment.
EOF
}

usage_exit() {
  usage
  exit 2
}

ns=
passlen=32
outdir=.
name=

while getopts ':n:l:o:h' opt; do
  case $opt in
    n) ns="$OPTARG";;
    l) passlen=$OPTARG;;
    o) outdir="$OPTARG";;
    h) usage; exit 0;;
    *) usage_exit;;
  esac
done
shift $(($OPTIND - 1))
name="$1"

# validation
if [ -z $name ]; then
  usage_exit
fi

mkdir -p $outdir

outfile=${outdir}/kustomization.yaml
exec 3>$outfile

# generate output
(
cat <<EOF
apiVersion: 'kustomize.config.k8s.io/v1beta1'
kind: 'Kustomization'
EOF

if [ ! -z $ns ]; then
  cat <<EOF
namespace: '${ns}'
EOF
fi

cat <<EOF
namePrefix: '${name}-'
commonLabels:
  app.kubernetes.io/name: 'redis'
  app.kubernetes.io/instance: 'redis-${name}'
  app.kubernetes.io/part-of: 'redis-${name}'
  app.kubernetes.io/managed-by: 'launchcpx'
bases:
  - 'github.com/xorkevin/launchcpx//base/redis'
configMapGenerator:
  - name: 'redis-opts'
    literals:
      - 'passlen=${passlen}'
EOF
) 1>&3

exec 3>&-
