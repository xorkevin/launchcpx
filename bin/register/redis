#!/bin/sh

set -e

if [ -z $FLIGHTCTL_ROOT ]; then
  echo "Run flightctl"
  exit 1
fi

. "${FLIGHTCTL_ROOT}/_flightctl_lib.sh"

usage() {
  cat <<EOF 1>&2
USAGE:
    $BIN_NAME [OPTIONS] <name>

OPTIONS:
    -n <namespace>
        Use the kubernetes namespace.
        Default is default.
    -d
        Deregister role.
    -h
        Print this help.

ARGS:
    <name>
        The name of the redis service.
EOF
}

usage_exit() {
  usage
  exit 2
}

ns='default'
name=
deregister=

while getopts ':n:dh' opt; do
  case $opt in
    n) ns="$OPTARG";;
    d) deregister="1";;
    h) usage; exit 0;;
    *) usage_exit;;
  esac
done
shift $(($OPTIND - 1))
name="$1"

# validation
if [ -z $name ]; then
  usage_exit
fi

appname=${ns}-${name}
role=${appname}-role

if [ ! -z $deregister ]; then
  vault policy delete ${appname}
  vault delete auth/kubernetes/role/${role}
  exit 0
fi

vault policy write ${appname} - <<EOF
path "kv/data/infra/${ns}/${name}" {
  capabilities = ["create", "update"]
}
EOF

vault write auth/kubernetes/role/${role} \
  bound_service_account_names="${name}-redis" \
  bound_service_account_namespaces="$ns" \
  policies="$appname" \
  ttl="1m" \
  max_ttl="5m"
