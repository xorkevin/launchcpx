#!/bin/sh

set -e

if [ -z $FLIGHTCTL_ROOT ]; then
  echo "Run flightctl"
  exit 1
fi

. "${FLIGHTCTL_ROOT}/_flightctl_lib.sh"

usage() {
  cat <<EOF 1>&2
USAGE:
    $BIN_NAME [OPTIONS] <pgns> <pgname> <name>

OPTIONS:
    -n <namespace>
        Use the kubernetes namespace.
        Default is default.
    -o <directory>
        Output config to directory.
        Default is the current directory.
    -h
        Print this help.

ARGS:
    <pgns>
        The name of the postgres service namespace.
    <pgname>
        The name of the postgres service.
    <name>
        The name of the application.
EOF
}

usage_exit() {
  usage
  exit 2
}

ns=default
outdir=.
pgns=
pgname=
name=

while getopts ':n:t:o:h' opt; do
  case $opt in
    n) ns="$OPTARG";;
    o) outdir="$OPTARG";;
    h) usage; exit 0;;
    *) usage_exit;;
  esac
done
shift $(($OPTIND - 1))
pgns="$1"
pgname="$2"
name="$3"

# validation
if [ -z $pgns ]; then
  usage_exit
fi
if [ -z $pgname ]; then
  usage_exit
fi
if [ -z $name ]; then
  usage_exit
fi

policydir=${outdir}/policy
mkdir -p $policydir

appname=${pgns}-${pgname}
role=${appname}-role
rolero=${appname}-ro

outfile=${policydir}/${appname}.policy.hcl
exec 3>$outfile

(
cat <<EOF
path "database/creds/${role}" {
  capabilities = ["read"]
}
path "database/creds/${rolero}" {
  capabilities = ["read"]
}
EOF
) 1>&3

exec 3>&-
